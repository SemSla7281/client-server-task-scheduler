c
self.lesson
self.agent
self
c
self.lesson.id
self.lesson
self.agent
self
c
is_active
c
q
is_active
c
Task.first
Task.create!(params)
params
c
agent_params[:secret_key]
agent_params['secret_key']
agent_params["secret_key"]
agent_params
agent_params['sceret_key']
agent_params[:sceret_key]
agent_params.merge decode_key
c
agent_params
c
@key_prefix
c
@key_prefix
c
@key_prefix
c
params
c
params
c
n
y
q
params
c
params
c
params
c
params = JSON.parse params
params
c
schedues
c
end_time
days_diff
dates
schedues
c
schedues.map { |timestamp| expiry_in_seconds timestamp }.compact
task.end_time
task.weekdays
a
schedues
c
schedues
c
expiries
c
days_diff.times.map { |i| start_time + i.day }.first
days_diff.times.map { |i| start_time + i.day }.count
days_diff.times.map { |i| start_time + i.day }.counnt
days_diff.times.map { |i| start_time + i.day }
days_diff.times { |i| start_time + i.day }
c
dates
c
schedules
:schedules
schedues
c
value
c
params
Task.create! params
c
value
